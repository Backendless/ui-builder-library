{
  "id": "c_8742f14bae0de4b46c59cd430a8d5ca4",
  "name": "Cropper",
  "description": "This is a component for cropping image.",
  "showInToolbox": true,
  "faIcon": "crop",
  "mainJS": "dist/index.js",
  "type": "custom",
  "category": "Custom Components",
  "properties": [
    {
      "showInSettings": true,
      "hasLogicHandler": true,
      "name": "imageUrl",
      "handlerId": "imageUrlLogic",
      "type": "text",
      "label": "Image Url",
      "handlerLabel": "Image Url Logic",
      "handlerDescription": "This is a handler for the logic to determine the image of the cropper.",
      "settingTooltip": "Controls the image of the cropper.",
      "defaultValue": ""
    },
    {
      "type": "text",
      "name": "initialLabel",
      "label": "Initial Label",
      "showInSettings": true,
      "defaultValue": "Drop image here or click to select",
      "hasLogicHandler": false,
      "handlerId": "initialLabelLogic",
      "settingTooltip": "Controls the initial label of the cropper."
    },
    {
      "type": "checkbox",
      "name": "toolbarVisibility",
      "label": "Toolbar Visibility",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": true,
      "handlerId": "toolbarVisibilityLogic",
      "handlerLabel": "Toolbar Visibility Logic",
      "handlerDescription": "This is a handler for the logic to determine if the toolbar should be visible.",
      "settingTooltip": "Enables showing the toolbar of the cropper."
    },
    {
      "type": "checkbox",
      "name": "addImageButtonVisibility",
      "label": "Add Image Button Visibility",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": true,
      "handlerId": "addImageButtonVisibilityLogic",
      "handlerLabel": "Add Image Button Visibility Logic",
      "handlerDescription": "This is a handler for the logic to determine if the Add Image button should be visible.",
      "settingTooltip": "Controls the label of the Add Image button."
    },
    {
      "type": "checkbox",
      "name": "cleanButtonVisibility",
      "label": "Clean Button Visibility",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": true,
      "handlerId": "cleanButtonVisibilityLogic",
      "handlerLabel": "Clean Button Visibility Logic",
      "handlerDescription": "This is a handler for the logic to determine if the Clean button should be visible.",
      "settingTooltip": "Enables showing the Clean button."
    },
    {
      "type": "checkbox",
      "name": "saveButtonVisibility",
      "label": "Save Button Visibility",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": true,
      "handlerId": "saveButtonVisibilityLogic",
      "handlerLabel": "Save Button Visibility Logic",
      "handlerDescription": "This is a handler for the logic to determine if the Save button should be visible.",
      "settingTooltip": "Enables showing the Save button."
    },
    {
      "type": "checkbox",
      "name": "downloadButtonVisibility",
      "label": "Download Button Visibility",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": true,
      "handlerId": "downloadButtonVisibilityLogic",
      "handlerLabel": "Download Button Visibility Logic",
      "handlerDescription": "This is a handler for the logic to determine if the Download button should be visible.",
      "settingTooltip": "Enables showing the Download button."
    },
    {
      "type": "select",
      "name": "aspectRatio",
      "label": "Aspect Ratio",
      "showInSettings": true,
      "defaultValue": "NaN",
      "hasLogicHandler": false,
      "handlerId": "aspectRatioLogic",
      "options": [
        {
          "value": "NaN",
          "label": "free"
        },
        {
          "value": "16/9",
          "label": "16:9"
        },
        {
          "value": "4/3",
          "label": "4:3"
        },
        {
          "value": "1/1",
          "label": "1:1"
        },
        {
          "value": "2/3",
          "label": "2:3"
        }
      ],
      "settingTooltip": "Controls the aspect ratio of the crop box."
    },
    {
      "type": "select",
      "name": "dragMode",
      "label": "Drag Mode",
      "showInSettings": true,
      "defaultValue": "move",
      "hasLogicHandler": false,
      "handlerId": "dragModeLogic",
      "options": [
        {
          "value": "crop",
          "label": "crop"
        },
        {
          "value": "move",
          "label": "move"
        },
        {
          "value": "none",
          "label": "none"
        }
      ],
      "settingTooltip": "Controls the dragging mode of the cropper."
    },
    {
      "type": "checkbox",
      "name": "cropBoxModal",
      "label": "Crop Box Modal",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "cropBoxModalLogic",
      "settingTooltip": "Enables showing the black modal above the image and under the crop box."
    },
    {
      "type": "checkbox",
      "name": "cropBoxGuides",
      "label": "Crop Box Guides",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "cropBoxGuidesLogic",
      "settingTooltip": "Enables showing the dashed lines above the crop box."
    },
    {
      "type": "checkbox",
      "name": "centerIndicator",
      "label": "Center Indicator",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "centerIndicatorLogic",
      "settingTooltip": "Enables showing the center indicator above the crop box."
    },
    {
      "type": "checkbox",
      "name": "cropBoxHighlight",
      "label": "Crop Box Highlight",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "cropBoxHighlightLogic",
      "settingTooltip": "Enables showing the white modal above the crop box."
    },
    {
      "type": "checkbox",
      "name": "backgroundGrid",
      "label": "Background Grid",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "backgroundGridLogic",
      "settingTooltip": "Enables showing the grid background of the container."
    },
    {
      "type": "checkbox",
      "name": "autoCrop",
      "label": "Auto Crop",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "autoCropLogic",
      "settingTooltip": "Enables to crop the image automatically when initialized."
    },
    {
      "type": "select",
      "name": "autoCropArea",
      "label": "Auto Crop Area",
      "showInSettings": true,
      "defaultValue": "0.8",
      "hasLogicHandler": false,
      "handlerId": "autoCropAreaLogic",
      "options": [
        {
          "value": "0.1",
          "label": "10%"
        },
        {
          "value": "0.2",
          "label": "20%"
        },
        {
          "value": "0.3",
          "label": "30%"
        },
        {
          "value": "0.4",
          "label": "40%"
        },
        {
          "value": "0.5",
          "label": "50%"
        },
        {
          "value": "0.6",
          "label": "60%"
        },
        {
          "value": "0.7",
          "label": "70%"
        },
        {
          "value": "0.8",
          "label": "80%"
        },
        {
          "value": "0.9",
          "label": "90%"
        },
        {
          "value": "1",
          "label": "100%"
        }
      ],
      "settingTooltip": "Controls the automatic cropping area size."
    },
    {
      "type": "checkbox",
      "name": "movableImage",
      "label": "Movable Image",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "movableImageLogic",
      "settingTooltip": "Enables to move the image."
    },
    {
      "type": "checkbox",
      "name": "rotatableImage",
      "label": "Rotatable Image",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "rotatableImageLogic",
      "settingTooltip": "Enables to rotate the image."
    },
    {
      "type": "checkbox",
      "name": "scalableImage",
      "label": "Scalable Image",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "scalableImageLogic",
      "settingTooltip": "Enables to scale the image."
    },
    {
      "type": "checkbox",
      "name": "zoomableImage",
      "label": "Zoomable Image",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "zoomableImageLogic",
      "settingTooltip": "Enables to zoom the image."
    },
    {
      "type": "checkbox",
      "name": "zoomOnTouch",
      "label": "Zoom On Touch",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "zoomOnTouchLogic",
      "settingTooltip": "Enables to zoom the image by dragging touch."
    },
    {
      "type": "checkbox",
      "name": "zoomOnWheel",
      "label": "Zoom On Wheel",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "zoomOnWheelLogic",
      "defaultValue": true,
      "settingTooltip": "Enables to zoom the image by mouse wheeling."
    },
    {
      "type": "checkbox",
      "name": "cropBoxMovable",
      "label": "Crop Box Movable",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "cropBoxMovableLogic",
      "settingTooltip": "Enables to move the crop box by dragging."
    },
    {
      "type": "checkbox",
      "name": "cropBoxResizable",
      "label": "Crop Box Resizable",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "cropBoxResizableLogic",
      "settingTooltip": "Enables to resize the crop box by dragging."
    },
    {
      "type": "checkbox",
      "name": "toggleDragModeOnDblclick",
      "label": "Toggle Drag Mode On Dblclick",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "toggleDragModeOnDblclickLogic",
      "defaultValue": true,
      "settingTooltip": "Enables to toggle drag mode between crop and move when clicking twice on the cropper."
    },
    {
      "type": "number",
      "name": "minContainerWidth",
      "label": "Min Container Width",
      "showInSettings": true,
      "defaultValue": "200",
      "hasLogicHandler": false,
      "handlerId": "minContainerWidthLogic",
      "settingTooltip": "Controls the minimum width of the cropper container."
    },
    {
      "type": "number",
      "name": "minContainerHeight",
      "label": "Min Container Height",
      "showInSettings": true,
      "defaultValue": "100",
      "hasLogicHandler": false,
      "handlerId": "minContainerHeightLogic",
      "settingTooltip": "Controls the minimum height of the cropper container."
    },
    {
      "type": "number",
      "name": "minCanvasWidth",
      "label": "Min Canvas Width",
      "showInSettings": true,
      "defaultValue": "0",
      "hasLogicHandler": false,
      "handlerId": "minCanvasWidthLogic",
      "settingTooltip": "Controls the minimum width of the canvas (image wrapper)."
    },
    {
      "type": "number",
      "name": "minCanvasHeight",
      "label": "Min Canvas Height",
      "showInSettings": true,
      "defaultValue": "0",
      "hasLogicHandler": false,
      "handlerId": "minCanvasHeightLogic",
      "settingTooltip": "Controls the minimum height of the canvas (image wrapper)."
    },
    {
      "type": "number",
      "name": "minCropBoxWidth",
      "label": "Min Crop Box Width",
      "showInSettings": true,
      "defaultValue": "0",
      "hasLogicHandler": false,
      "handlerId": "minCropBoxWidthLogic",
      "settingTooltip": "Controls the minimum width of the crop box."
    },
    {
      "type": "number",
      "name": "minCropBoxHeight",
      "label": "Min Crop Box Height",
      "showInSettings": true,
      "defaultValue": "0",
      "hasLogicHandler": false,
      "handlerId": "minCropBoxHeightLogic",
      "settingTooltip": "Controls the minimum height of the crop box."
    },
    {
      "showInSettings": true,
      "hasLogicHandler": false,
      "name": "addImageButtonLabel",
      "handlerId": "addImageButtonLabelLogic",
      "label": "Add Image Button Label",
      "type": "text",
      "defaultValue": "Add image",
      "settingTooltip": "Controls the label of the Add Image button."
    },
    {
      "type": "text",
      "name": "cleanButtonLabel",
      "label": "Clean Button Label",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "cleanButtonLabelLogic",
      "defaultValue": "Clean",
      "settingTooltip": "Controls the label of the Clean button."
    },
    {
      "type": "text",
      "name": "saveButtonLabel",
      "label": "Save Button Label",
      "showInSettings": true,
      "defaultValue": "Save",
      "hasLogicHandler": false,
      "handlerId": "saveButtonLabelLogic",
      "settingTooltip": "Controls the label of the Save button."
    },
    {
      "type": "text",
      "name": "downloadButtonLabel",
      "label": "Download Button Label",
      "showInSettings": true,
      "defaultValue": "Download",
      "hasLogicHandler": false,
      "handlerId": "downloadButtonLabelLogic",
      "settingTooltip": "Controls the label of the Download button."
    }
  ],
  "eventHandlers": [
    {
      "name": "onReady",
      "label": "On Ready Event",
      "handlerDescription": "This event is fired when the cropper is fully rendered."
    },
    {
      "name": "onCrop",
      "label": "On Crop Event",
      "contextBlocks": [
        {
          "id": "details",
          "label": "Details"
        }
      ],
      "handlerDescription": "This event is fired when the crop area is changed."
    },
    {
      "name": "onCropStart",
      "label": "On Crop Start Event",
      "handlerDescription": "This event is fired when the user starts cropping the image."
    },
    {
      "name": "onCropMove",
      "label": "On Crop Move Event",
      "handlerDescription": "This event is fired when the user moves the crop area."
    },
    {
      "name": "onCropEnd",
      "label": "On Crop End Event",
      "handlerDescription": "This event is fired when the user finishes cropping the image."
    },
    {
      "name": "onZoom",
      "label": "On Zoom Event",
      "handlerDescription": "This event is fired when the user zooms the image."
    },
    {
      "name": "onSave",
      "label": "On Save Event",
      "contextBlocks": [
        {
          "id": "fileContent",
          "label": "File Content"
        }
      ],
      "handlerDescription": "This event is fired when the user clicks the mouse or taps \"Save\" button."
    }
  ],
  "actions": [
    {
      "id": "crop",
      "label": "Crop in"
    },
    {
      "id": "reset",
      "label": "Reset"
    },
    {
      "id": "clear",
      "label": "Clear"
    },
    {
      "id": "replace",
      "inputs": [
        {
          "id": "url",
          "label": "url"
        }
      ],
      "label": "Replace Image in"
    },
    {
      "id": "enableCropper",
      "label": "Enable"
    },
    {
      "id": "disableCropper",
      "label": "Disable"
    },
    {
      "id": "destroy",
      "label": "Destroy"
    },
    {
      "id": "move",
      "label": "Move Canvas in",
      "inputs": [
        {
          "id": "offsetX",
          "label": "offsetX"
        },
        {
          "id": "offsetY",
          "label": "offsetY"
        }
      ]
    },
    {
      "id": "moveTo",
      "label": "Move Canvas to Point in",
      "inputs": [
        {
          "id": "x",
          "label": "x"
        },
        {
          "id": "y",
          "label": "y"
        }
      ]
    },
    {
      "id": "zoom",
      "label": "Zoom Canvas in",
      "inputs": [
        {
          "id": "ratio",
          "label": "ratio"
        }
      ]
    },
    {
      "id": "zoomTo",
      "label": "Zoom Canvas to Ratio in",
      "inputs": [
        {
          "id": "ratio",
          "label": "ratio"
        },
        {
          "id": "x",
          "label": "x"
        },
        {
          "id": "y",
          "label": "y"
        }
      ]
    },
    {
      "id": "rotate",
      "label": "Rotate Image in",
      "inputs": [
        {
          "id": "degree",
          "label": "degree"
        }
      ]
    },
    {
      "id": "rotateTo",
      "label": "Rotate Image to Degree in",
      "inputs": [
        {
          "id": "degree",
          "label": "degree"
        }
      ]
    },
    {
      "id": "scale",
      "inputs": [
        {
          "id": "scaleX",
          "label": "scaleX"
        },
        {
          "id": "scaleY",
          "label": "scaleY"
        }
      ],
      "label": "Scale Image in"
    },
    {
      "id": "getData",
      "label": "Get Data from",
      "hasReturn": true,
      "inputs": [
        {
          "id": "rounded ",
          "label": "rounded"
        }
      ]
    },
    {
      "id": "setData",
      "label": "Set Data for",
      "inputs": [
        {
          "id": "x",
          "label": "x"
        },
        {
          "id": "y",
          "label": "y"
        },
        {
          "id": "width",
          "label": "width"
        },
        {
          "id": "height",
          "label": "height"
        },
        {
          "id": "rotate",
          "label": "rotate"
        },
        {
          "id": "scaleX",
          "label": "scaleX"
        },
        {
          "id": "scaleY",
          "label": "scaleY"
        }
      ]
    },
    {
      "id": "getContainerData",
      "label": "Get Container Data from",
      "hasReturn": true
    },
    {
      "id": "getImageData",
      "hasReturn": true,
      "label": "Get Image Data from"
    },
    {
      "id": "getCanvasData",
      "label": "Get Canvas Data from",
      "hasReturn": true
    },
    {
      "id": "setCanvasData",
      "label": "Set Canvas Data for",
      "inputs": [
        {
          "id": "left",
          "label": "left"
        },
        {
          "id": "top",
          "label": "top"
        },
        {
          "id": "width",
          "label": "width"
        },
        {
          "id": "height",
          "label": "height"
        }
      ]
    },
    {
      "id": "getCropBoxData",
      "label": "Get Crop Box Data from",
      "hasReturn": true
    },
    {
      "id": "setCropBoxData",
      "label": "Set Crop Box Data for",
      "inputs": [
        {
          "id": "left",
          "label": "left"
        },
        {
          "id": "top",
          "label": "top"
        },
        {
          "id": "width",
          "label": "width"
        },
        {
          "id": "height",
          "label": "height"
        }
      ]
    },
    {
      "id": "getCroppedCanvas",
      "label": "Get Cropped Canvas from",
      "hasReturn": true,
      "inputs": [
        {
          "id": "width",
          "label": "width"
        },
        {
          "id": "height",
          "label": "height"
        },
        {
          "id": "minWidth",
          "label": "minWidth"
        },
        {
          "id": "minHeight",
          "label": "minHeight"
        },
        {
          "id": "maxWidth",
          "label": "maxWidth"
        },
        {
          "id": "maxHeight",
          "label": "maxHeight"
        },
        {
          "id": "fillColor",
          "label": "fillColor"
        },
        {
          "id": "imageSmoothingEnabled",
          "label": "imageSmoothingEnabled"
        },
        {
          "id": "imageSmoothingQuality",
          "label": "imageSmoothingQuality"
        }
      ]
    },
    {
      "id": "setAspectRatio",
      "inputs": [
        {
          "id": "ratio",
          "label": "ratio"
        }
      ],
      "label": "Set Aspect Ratio for"
    },
    {
      "id": "setDragMode",
      "label": "Set Drag Mode for",
      "inputs": [
        {
          "id": "model",
          "label": "model"
        }
      ]
    },
    {
      "id": "uploadImage",
      "label": "Upload Image to"
    },
    {
      "id": "getCroppedImageContent",
      "label": "Get Cropped Image Content from",
      "hasReturn": true
    },
    {
      "id": "removeImage",
      "label": "Remove Image from"
    }
  ]
}
