{
  "id": "c_537cf5bb0ed129ae6ac71b985bfd0e7f",
  "name": "Rich Editor",
  "description": "This is the interface for editing rich text, which presents the user with a WYSIWYG editing area.",
  "showInToolbox": true,
  "faIcon": "paragraph",
  "mainJS": "dist/index.js",
  "type": "custom",
  "category": "Custom Components",
  "properties": [
    {
      "type": "text",
      "name": "content",
      "showInSettings": true,
      "hasLogicHandler": true,
      "handlerId": "contentLogic",
      "label": "Content",
      "handlerLabel": "Content Logic",
      "dataBinding": true,
      "handlerDescription": "This is a handler for the logic to determine the content of the rich editor."
    },
    {
      "type": "text",
      "name": "placeholder",
      "label": "Placeholder",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "placeholderLogic",
      "defaultValue": "Compose an epic..."
    },
    {
      "type": "select",
      "name": "toolbarPosition",
      "label": "Toolbar Position",
      "showInSettings": true,
      "defaultValue": "top",
      "hasLogicHandler": false,
      "handlerId": "toolbarPositionLogic",
      "options": [
        {
          "value": "top",
          "label": "top"
        },
        {
          "value": "bottom",
          "label": "bottom"
        }
      ]
    },
    {
      "type": "checkbox",
      "name": "fixedToolbar",
      "label": "Fixed Toolbar",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "fixedToolbarLogic"
    },
    {
      "type": "checkbox",
      "name": "linkInsertButton",
      "label": "Link Insert Button",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "linkInsertButtonLogic"
    },
    {
      "type": "checkbox",
      "name": "imageInsertButton",
      "label": "Image Insert Button",
      "showInSettings": true,
      "defaultValue": true,
      "hasLogicHandler": false,
      "handlerId": "imageInsertButtonLogic"
    },
    {
      "type": "checkbox",
      "name": "videoInsertButton",
      "label": "Video Insert Button",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "videoInsertButtonLogic",
      "defaultValue": true
    },
    {
      "type": "checkbox",
      "name": "readOnly",
      "label": "Read Only",
      "showInSettings": true,
      "hasLogicHandler": true,
      "handlerId": "readOnlyLogic",
      "handlerLabel": "Read Only Logic",
      "handlerDescription": "This is a handler for the logic to determine if the editor content should be editable. If the handler returns 'true' the content will be read-only."
    },
    {
      "type": "text",
      "name": "editorHeight",
      "label": "Editor Height",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "editorHeightLogic"
    },
    {
      "type": "text",
      "name": "editorMinHeight",
      "label": "Editor Min Height",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "editorMinHeightLogic"
    },
    {
      "type": "text",
      "name": "borderWidth",
      "label": "Border Width",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "borderWidthLogic",
      "defaultValue": "1px"
    },
    {
      "type": "select",
      "name": "borderStyle",
      "label": "Border Style",
      "showInSettings": true,
      "defaultValue": "solid",
      "hasLogicHandler": false,
      "handlerId": "borderStyleLogic",
      "options": [
        {
          "value": "none",
          "label": "none"
        },
        {
          "value": "solid",
          "label": "solid"
        },
        {
          "value": "dotted",
          "label": "dotted"
        },
        {
          "value": "dashed",
          "label": "dashed"
        },
        {
          "value": "double",
          "label": "double"
        },
        {
          "value": "groove",
          "label": "groove"
        },
        {
          "value": "ridge",
          "label": "ridge"
        },
        {
          "value": "inset",
          "label": "inset"
        },
        {
          "value": "outset",
          "label": "outset"
        }
      ]
    },
    {
      "type": "color",
      "name": "borderColor",
      "label": "Border Color",
      "showInSettings": true,
      "hasLogicHandler": false,
      "handlerId": "borderColorLogic"
    }
  ],
  "eventHandlers": [
    {
      "name": "onFocus",
      "label": "On Focus Event",
      "handlerDescription": "This event is fired when the editor receives the focus."
    },
    {
      "name": "onBlur",
      "label": "On Blur Event",
      "handlerDescription": "This event is fired when the editor loses the focus."
    },
    {
      "name": "onTextChange",
      "label": "On Text Change Event",
      "handlerDescription": "This event is fired when the user changes the contents of the editor."
    }
  ],
  "actions": [
    {
      "id": "getText",
      "label": "Get Text from",
      "hasReturn": true,
      "inputs": [
        {
          "id": "index",
          "label": "Index"
        },
        {
          "id": "length",
          "label": "Length"
        }
      ]
    },
    {
      "id": "setText",
      "label": "Set Text for",
      "inputs": [
        {
          "id": "text",
          "label": "Text"
        }
      ]
    },
    {
      "id": "getHTML",
      "label": "Get HTML from",
      "hasReturn": true
    },
    {
      "id": "setHTML",
      "label": "Set HTML for",
      "inputs": [
        {
          "id": "content",
          "label": "Content"
        }
      ]
    },
    {
      "id": "getSelection",
      "label": "Get Selection Range from",
      "hasReturn": true
    },
    {
      "id": "setSelection",
      "label": "Set Selection Range in",
      "inputs": [
        {
          "id": "index",
          "label": "Index"
        },
        {
          "id": "length",
          "label": "Length"
        }
      ]
    },
    {
      "id": "getLength",
      "label": "Get Length Property from",
      "hasReturn": true
    },
    {
      "id": "deleteText",
      "label": "Delete Text from",
      "inputs": [
        {
          "label": "Index",
          "id": "index"
        },
        {
          "label": "Length",
          "id": "length"
        }
      ]
    },
    {
      "id": "format",
      "label": "Format",
      "inputs": [
        {
          "id": "property",
          "label": "Property"
        },
        {
          "id": "value",
          "label": "Value"
        }
      ]
    },
    {
      "id": "blur",
      "label": "Blur"
    },
    {
      "id": "focus",
      "label": "Focus"
    }
  ]
}
