// you can use LESS variables from the current Theme and app extensions of the UI-Container
@bl-customComponent-pagination-themeColor: @themePrimary;
@bl-customComponent-pagination-backgroundColor: @appBackgroundColor;
@bl-customComponent-pagination-textColor: @appTextColor;

@bl-customComponent-pagination-button-smallSize: 26px;
@bl-customComponent-pagination-button-normalSize: 32px;
@bl-customComponent-pagination-button-largeSize: 40px;

@bl-customComponent-pagination-buttonColor: fade(@bl-customComponent-pagination-textColor, 87%);
@bl-customComponent-pagination-buttonColorSelected: if(luma(@bl-customComponent-pagination-textColor) < 50%, #ffffff, #000000);

.bl-customComponent-pagination {
  .pagination {
    display: flex;

    &__button-list {
      margin: 0;
      padding: 0;

      display: flex;
      align-items: center;

      list-style: none;
    }

    &__dots {
      min-width: @bl-customComponent-pagination-button-normalSize;

      padding: 0 6px;
      margin: 0 3px;

      text-align: center;
      color:@bl-customComponent-pagination-buttonColor;

      &--small {
        min-width: @bl-customComponent-pagination-button-smallSize;
        padding: 0 4px;
        margin: 0 1px;
      }

      &--large {
        min-width: @bl-customComponent-pagination-button-largeSize;
        padding: 0 10px;
      }
    }

    &__control-button--disabled {
      pointer-events: none;
      opacity: 0.38;
    }

    .button,
    .button-outline,
    .button-rounded,
    .button-rounded-outline {
      display: flex;
      align-items: center;
      justify-content: center;

      cursor: pointer;

      font-weight: 400;
      font-size: 0.875rem;
      color: @bl-customComponent-pagination-buttonColor;

      border-radius: 16px;
      border: 0;

      height: @bl-customComponent-pagination-button-normalSize;
      min-width: @bl-customComponent-pagination-button-normalSize;

      padding: 0 6px;
      margin: 0 3px;

      background-color: transparent;
      transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

      &--small {
        height: @bl-customComponent-pagination-button-smallSize;
        min-width: @bl-customComponent-pagination-button-smallSize;
        padding: 0 4px;
        margin: 0 1px;
        border-radius: 13px;
      }

      &--large {
        height: @bl-customComponent-pagination-button-largeSize;
        min-width: @bl-customComponent-pagination-button-largeSize;
        border-radius: 20px;
        padding: 0 10px;
        font-size: 0.9375rem;
      }

      &:hover {
        background-color: fade(@bl-customComponent-pagination-textColor, 8%);
      }
    }

    .button,
    .button-rounded {
      &--selected {
        background-color: lighten(@bl-customComponent-pagination-themeColor, 20%);
        color: @bl-customComponent-pagination-buttonColorSelected;

        &:hover {
          background-color: @bl-customComponent-pagination-themeColor;
        }
      }
    }

    .button-outline,
    .button-rounded-outline {
      border: 1px solid fade(@bl-customComponent-pagination-textColor, 23%);

      &--selected {
        color: @bl-customComponent-pagination-themeColor;
        background-color: fade(@bl-customComponent-pagination-themeColor, 12%);
        border-color: fade(@bl-customComponent-pagination-themeColor, 50%);

        &:hover {
          background-color: fade(@bl-customComponent-pagination-themeColor, 36%);
        }
      }
    }

    .button-rounded,
    .button-rounded-outline {
      border-radius: 4px;
    }

    &__control-button {
      &-svg {
        height: 20px;
        width: 20px;

        margin: 0 -8px;
        fill: @bl-customComponent-pagination-textColor;

        &--small {
          height: 18px;
          width: 18px;
        }

        &--large {
          height: 22px;
          width: 22px;
        }
      }
    }
  }
}
