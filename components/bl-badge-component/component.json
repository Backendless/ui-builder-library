{
  "id": "c_43f923fdd80e8ed727be59ea96811b64",
  "name": "Badge",
  "description": "Badge generates a small badge to the corner of its child(ren).",
  "showInToolbox": true,
  "faIcon": "certificate",
  "mainJS": "dist/index.js",
  "type": "custom",
  "category": "Custom Components",
  "properties": [
    {
      "name": "badgeLabel",
      "label": "Badge Label",
      "type": "text",
      "handlerId": "badgeLabelLogic",
      "handlerLabel": "Badge Label Logic",
      "handlerDescription": "This is a handler for the logic to determine the label of the Badge. Value returned by the handler will be used as the label of the Badge.",
      "dataBinding": true
    },
    {
      "type": "color",
      "name": "badgeLabelColor",
      "label": "Badge Label Color"
    },
    {
      "type": "color",
      "name": "badgeBackgroundColor",
      "label": "Badge Background Color"
    },
    {
      "name": "badgeFontSize",
      "label": "Badge Font Size",
      "type": "text"
    },
    {
      "type": "select",
      "name": "badgeAlignment",
      "label": "Badge Alignment",
      "defaultValue": "top-right",
      "options": [
        {
          "value": "top-right",
          "label": "top-right"
        },
        {
          "value": "top-left",
          "label": "top-left"
        },
        {
          "value": "bottom-left",
          "label": "bottom-left"
        },
        {
          "value": "bottom-right",
          "label": "bottom-right"
        }
      ]
    },
    {
      "name": "badgeVisibility",
      "label": "Badge Visibility",
      "type": "checkbox",
      "handlerId": "badgeVisibilityLogic",
      "handlerLabel": "Badge Visibility Logic",
      "dataBinding": true,
      "handlerDescription": "This is a handler for the logic to determine if Badge should be visible. If the handler returns 'true' Budge will be displayed.",
      "defaultValue": true
    },
    {
      "name": "badgeWidth",
      "label": "Badge Width",
      "type": "text"
    },
    {
      "name": "badgeHeight",
      "label": "Badge Height",
      "type": "text"
    },
    {
      "type": "select",
      "name": "badgeForm",
      "label": "Badge Form",
      "defaultValue": "roundedRectangle",
      "options": [
        {
          "value": "roundedRectangle",
          "label": "rounded rectangle"
        },
        {
          "value": "circle",
          "label": "circle"
        },
        {
          "value": "rectangle",
          "label": "rectangle"
        }
      ]
    },
    {
      "name": "icon",
      "label": "Icon",
      "type": "text"
    },
    {
      "name": "textContent",
      "label": "Text Content",
      "type": "text"
    },
    {
      "name": "contentFontSize",
      "label": "Content Font Size",
      "type": "text"
    },
    {
      "name": "imageUrl",
      "label": "Image Url",
      "type": "text"
    },
    {
      "name": "imageWidth",
      "label": "Image Width",
      "type": "text"
    },
    {
      "name": "padding",
      "label": "Padding",
      "type": "text"
    }
  ],
  "eventHandlers": [
    {
      "name": "onBadgeClick",
      "label": "On Badge Click Event",
      "handlerDescription": "This event is fired when the user clicks the mouse or taps the badge."
    },
    {
      "name": "onBadgeMouseOver",
      "label": "On Badge Mouse Over Event",
      "handlerDescription": "The event is fired when the mouse pointer hovers over the badge."
    },
    {
      "name": "onBadgeMouseOut",
      "label": "On Badge Mouse Out Event",
      "handlerDescription": "The event is fired when the mouse pointer leaves the badge boundaries."
    },
    {
      "name": "onContentClick",
      "label": "On Content Click Event",
      "handlerDescription": "This event is fired when the user clicks the mouse or taps the component content."
    },
    {
      "name": "onContentMouseOver",
      "label": "On Content Mouse Over Event",
      "handlerDescription": "The event is fired when the mouse pointer hovers over the component content."
    },
    {
      "name": "onContentMouseOut",
      "label": "On Content Mouse Out Event",
      "handlerDescription": "The event is fired when the mouse pointer leaves the component content boundaries."
    }
  ],
  "actions": []
}